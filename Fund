package comp248.concordia;

/**
 * @classDescription The Fund class contains attributes and methods relevant to the creation of a Fund object
 */
public class Fund {
    //Declare static attributes to hold the amount of each currency type a Fund object holds.
    private static int loonies, toonies, fiveDBills, tenDBills, twentyDBills;

    //Initialize the amount of each currency type.
    private static final int ONE_DOLLAR = 1;
    private static final int TWO_DOLLAR = 2;
    private static final int FIVE_DOLLAR = 5;
    private static final int TEN_DOLLAR = 10;
    private static final int TWENTY_DOLLAR = 20;

    /** Default constructor */
    public Fund() {

    }

    /**
     * @constructorDescription Constructor with 5 parameters to directly set the values of the attributes upon initialization
     * @param loonies The number of loonies
     * @param toonies The number of toonies
     * @param fiveDBills The number of five dollar bills
     * @param tenDBills The number of ten dollar bills
     * @param twentyDBills The number of twenty dollar bills
     */
    public Fund(int loonies, int toonies, int fiveDBills, int tenDBills, int twentyDBills) {
        this.loonies = loonies;
        this.toonies = toonies;
        this.fiveDBills = fiveDBills;
        this.tenDBills = tenDBills;
        this.twentyDBills = twentyDBills;
    }

    /**
     * @constructorDescription Copy constructor that sets all attributes of the object to those of an already-existing Fund object
     * @param fund The original Fund object to be copied from
     */
    public Fund(Fund fund) {
        this.loonies = fund.loonies;
        this.toonies = fund.toonies;
        this.fiveDBills = fund.fiveDBills;
        this.tenDBills = fund.tenDBills;
        this.twentyDBills = fund.twentyDBills;
    }

    //Accessor method for loonies
    public static int getLoonies() {
        return loonies;
    }

    //Mutator method for loonies
    public static void setLoonies(int loonies) {
        Fund.loonies = loonies;
    }

    //Accessor method for toonies
    public static int getToonies() {
        return toonies;
    }

    //Mutator method for toonies
    public static void setToonies(int toonies) {
        Fund.toonies = toonies;
    }

    //Accessor method for fiveDBills
    public static int getFiveDBills() {
        return fiveDBills;
    }

    //Mutator method for fiveDBills
    public static void setFiveDBills(int fiveDBills) {
        Fund.fiveDBills = fiveDBills;
    }

    //Accessor method for tenDBills
    public static int getTenDBills() {
        return tenDBills;
    }

    //Mutator method for tenDBills
    public static void setTenDBills(int tenDBills) {
        Fund.tenDBills = tenDBills;
    }

    //Accessor method for twentyDBills
    public static int getTwentyDBills() {
        return twentyDBills;
    }

    //Mutator method for twentyDBills
    public static void setTwentyDBills(int twentyDBills) {
        Fund.twentyDBills = twentyDBills;
    }

    /**
     * @methodDescription Increases the amount of loonies, toonies, fiveDBills, tenDBills and twentyDBills of a Fund object
     * @param addLoonies The amount of loonies to increment by
     * @param addToonies The amount of toonies to increment by
     * @param addFiveDBills The amount of fiveDBills to increment by
     * @param addTenDBills The amount of tenDBills to increment by
     * @param addTwentyDBills The amount of twentyDBills to increment by
     */
    public void addFund(int addLoonies, int addToonies, int addFiveDBills, int addTenDBills, int addTwentyDBills) {
        this.loonies += addLoonies;
        this.toonies += addToonies;
        this.fiveDBills += addFiveDBills;
        this.tenDBills += addTenDBills;
        this.twentyDBills += addTwentyDBills;
    }

    /**
     * @methodDescription Returns the sum of the products of the different currency types and the corresponding currency values
     * @return The fund total of the Fund object
     */
    public int fundTotal() {
        return this.loonies * this.ONE_DOLLAR + this.toonies * this.TWO_DOLLAR + this.fiveDBills * this.FIVE_DOLLAR
                + this.tenDBills * this.TEN_DOLLAR + this.twentyDBills * this.TWENTY_DOLLAR;
    }

    /**
     * @methodDescription Displays the amount of each currency type that a Fund object possesses
     * @return The fund breakdown of a Fund object
     */
    @Override
    public String toString() {
        return "(" + this.loonies + " x $" + this.ONE_DOLLAR + ") + (" + this.toonies + " x $" + this.TWO_DOLLAR
                + ") + (" + this.fiveDBills + " x $" + this.FIVE_DOLLAR + ") + (" + this.tenDBills + " x $" + this.TEN_DOLLAR
                + ") + (" + this.twentyDBills + " x $" + this.TWENTY_DOLLAR + ")";
    }

    //SOMETHING WRONG HERE
    /**
     * @methodDescription Verifies if two Fund objects possess the same amount of currency types
     * @param otherFund The second HouseholdBudget object used in the comparison
     * @return true if both Fund objects possess the same attribute values, false if not
     */
    public boolean equals(Fund otherFund) {
        return this.loonies == otherFund.loonies && this.toonies == otherFund.toonies
                && this.fiveDBills == otherFund.fiveDBills && this.tenDBills == otherFund.tenDBills
                && this.twentyDBills == otherFund.twentyDBills;
    }
}
